version: '3'

services:
  backstage:
    image: backstage
    build:
      dockerfile: packages/backend/Dockerfile
      context: ./
    env_file: ./.env
    ports:
      - 7007:7007
    environment:
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passwd
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.backstage.rule=Host(`localhost`)"
    #   - "traefik.http.routers.backstage.entrypoints=websecure"
    #     #- "traefik.http.routers.backstage.tls=true"
    #   - "traefik.http.routers.backstage.service=backstage"
    #   - "traefik.http.services.backstage.loadbalancer.server.port=7007"
  
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: passwd

  # reverse-proxy:
  #   image: traefik:v2.9
  #   container_name: reverse-proxy
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.docker"
  #     - "--log.level=DEBUG"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.websecure.address=:80"
  #   ports:
  #     - "80:80"
  #       # The Web UI (enabled by --api.insecure=true)
  #     - "8080:8080"
  #   logging:
  #     driver: none
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
